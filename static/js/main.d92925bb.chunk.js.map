{"version":3,"sources":["components/Card.js/Card.js","components/DragItem.js","components/DataGrid/DataGrid.js","components/DataGrid/StyledDataGrid.js","components/ContentSection.js","helpers/BookmarkObj.js","helpers/updateLocalStorage.js","components/Header/Header.js","App.js","index.js"],"names":["StyledCard","styled","item","className","dragClass","title","url","description","rating","keywords","map","Types","cardSource","beginDrag","props","index","group","endDrag","monitor","fileTarget","hover","component","node","getNode","dragIndex","getItem","hoverIndex","hoverBoundingRect","getBoundingClientRect","Math","abs","getClientOffset","x","left","width","moveCard","DragItem","React","forwardRef","ref","connectDragSource","connectDropTarget","elementRef","useRef","draggedId","id","useImperativeHandle","current","DropTarget","connect","dropTarget","isOver","isOverCurrent","shallow","canDrop","itemType","getItemType","DragSource","dragSource","isDragging","DragDropContext","MultiBackend","HTML5toTouch","projectData","bookmarks","setBookmarks","produce","draft","arrayMove","flipId","flipKey","spring","StyledDataGrid","DataGrid","ContentSection","BookmarkObj","this","v4","type","moveToLibrary","bind","moveToBuffer","moveToArchive","setRating","setKeywords","num","hashtagArr","updateLocalStorage","keyString","window","localStorage","setItem","JSON","stringify","AutosubmitWrap","div","HeaderWrap","header","NavList","ul","Header","autoSubmit","setAutoSubmit","link","isActive","to","Switch","onChange","checked","App","useState","startingBookmarks","isSubmited","parse","bookmark","addBookmark","newBookmark","deleteBookmark","bookmarkId","i","indexOf","newBookmarks","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d92925bb.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nfunction Card({ item, dragClass, className }) {\n\n    return (\n        <div className={`${className} card-file`}>\n            {item.title ? <h4>{item.title}</h4> : <h4>{item.url}</h4>}\n            <p>{item.description}</p>\n            <p>{item.rating}</p>\n            {/* keywords */}\n            <div>\n                {item.keywords.map(item => <span>{item}</span>)}\n            </div>\n        </div>\n    );\n}\n\n// styles\nconst StyledCard = styled(Card)`\n${tw`p-4 bg-red-200 break-all`}\n`\nexport default StyledCard\n","import React, { useImperativeHandle, useRef } from \"react\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport StyledCard from \"./Card.js/Card\";\n\n// Drag sources and drop targets only interact\n// if they have the same string type.\n// You want to keep types in a separate file with\n// the rest of your app's constants.\nconst Types = {\n    FILE: \"file\"\n};\n\n/**\n * Specifies the drag source contract.\n * Only `beginDrag` function is required.\n */\nconst cardSource = {\n    beginDrag(props) {\n        // Return the data describing the dragged item\n        let item = { ...props.item };\n        item.index = props.index;\n        item.group = props.group;\n        return item;\n    },\n    endDrag(props, monitor) {\n        //console.log(props);\n        //console.log(monitor.getItem());\n        //console.log(monitor.getDropResult());\n    }\n};\n\nconst fileTarget = {\n    hover(props, monitor, component) {\n        if (!component) {\n            return null;\n        }\n        // node = HTML Div element from imperative API\n        const node = component.getNode();\n        if (!node) {\n            return null;\n        }\n\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n\n        // Don't replace items with themselves\n\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n\n        // Determine rectangle on screen\n        const hoverBoundingRect = node.getBoundingClientRect();\n\n        // Scroll window if mouse near vertical edge(100px)\n\n        // Horizontal Check --\n\n        if (\n            Math.abs(monitor.getClientOffset().x - hoverBoundingRect.left) >\n            hoverBoundingRect.width / 1.8\n        )\n            return;\n\n        // Vertical Check |\n\n        // Time to actually perform the action\n        props.moveCard(dragIndex, hoverIndex);\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        //console.log(monitor.getItem());\n        monitor.getItem().index = hoverIndex;\n    }\n};\n\n/**\n * Specifies which props to inject into your component.\n */\nfunction collect(connect, monitor) {\n    return {\n        // Call this function inside render()\n        // to let React DnD handle the drag events:\n        connectDragSource: connect.dragSource(),\n        // You can ask the monitor about the current drag state:\n        isDragging: monitor.isDragging(),\n        getItem: monitor.getItem()\n    };\n}\n\nconst DragItem = React.forwardRef(\n    ({ item, getItem, connectDragSource, connectDropTarget }, ref) => {\n        const elementRef = useRef(null);\n        connectDragSource(elementRef);\n        connectDropTarget(elementRef);\n        let draggedId = null;\n        if (getItem !== null) {\n            draggedId = getItem.id;\n        }\n\n        const dragClass = draggedId === item.id ? \"draggedItem\" : \"\";\n\n        useImperativeHandle(ref, () => ({\n            getNode: () => elementRef.current\n        }));\n        return (\n            <div ref={elementRef} className={dragClass}>\n                <StyledCard item={item} dragClass={dragClass} />\n            </div>\n        );\n    }\n);\n\n// Export the wrapped version\nexport default DropTarget(Types.FILE, fileTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType()\n}))(DragSource(Types.FILE, cardSource, collect)(DragItem));\n","import DragItem from \"../DragItem.js\";\nimport { DragDropContext } from \"react-dnd\";\nimport MultiBackend from \"react-dnd-multi-backend\";\nimport HTML5toTouch from \"react-dnd-multi-backend/lib/HTML5toTouch\";\nimport produce from \"immer\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport arrayMove from \"array-move\";\n\n// grid with dnd logic\nconst DataGrid = ({ className, bookmarks, setBookmarks }\n) => {\n\n    const moveCard = (dragIndex, hoverIndex) => {\n        // Same group - just reorder\n        setBookmarks(produce(bookmarks, draft => draft = arrayMove(draft, dragIndex, hoverIndex)))\n    }\n\n    let projectData,\n        flipId = \"\";\n\n    projectData =\n        <div className={className}>\n            {bookmarks.map((item, index) => (\n                <Flipped key={item.id} flipId={item.id}>\n                    <DragItem\n                        item={item}\n                        key={item.id}\n                        index={index}\n                        moveCard={moveCard}\n                    />\n                </Flipped>\n            ))}\n        </div>\n\n    return (\n        <Flipper flipKey={flipId} spring=\"stiff\">\n            {projectData}\n        </Flipper>\n    )\n}\n\n// highest component needs to be wrapped in DragDropContext\nexport default DragDropContext(MultiBackend(HTML5toTouch))(DataGrid)\n","import DataGrid from \"./DataGrid\"\nimport styled from \"styled-components\"\nimport tw from \"twin.macro\"\n\n// styled-component\nconst StyledDataGrid = styled(DataGrid)`\n${tw`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 p-4 gap-4`}\n`\nexport default StyledDataGrid\n","import StyledDataGrid from \"./DataGrid/StyledDataGrid.js\";\n\nconst ContentSection = ({ bookmarks, setBookmarks, ...props }) => {\n\n  return (\n    <>\n      <StyledDataGrid\n        bookmarks={bookmarks}\n        setBookmarks={setBookmarks}\n      />\n    </>\n  )\n}\n\n\nexport default ContentSection","import { v4 } from \"uuid\"\n\nclass BookmarkObj {\n\n    constructor(\n        title = \"\",\n        description = \"No description available\",\n        url = \"#\",\n        itemType = \"buffer\",\n        keywords = [],\n        rating = 0) {\n        this.title = title\n        this.description = description\n        this.url = url\n        this.id = v4()\n        this.type = itemType\n        this.keywords = keywords\n        this.rating = rating\n        this.moveToLibrary = this.moveToLibrary.bind(this)\n        this.moveToBuffer = this.moveToBuffer.bind(this)\n        this.moveToArchive = this.moveToArchive.bind(this)\n        this.setRating = this.setRating.bind(this)\n        this.setKeywords = this.setKeywords.bind(this)\n    }\n\n    setRating(num) {\n        this.rating = num\n    }\n\n    setKeywords(hashtagArr) {\n        this.keywords = hashtagArr\n    }\n\n    moveToLibrary() {\n        this.type = \"library\"\n    }\n\n    moveToBuffer() {\n        this.type = \"buffer\"\n    }\n\n    moveToArchive() {\n        this.type = \"archive\"\n    }\n}\n\nexport default BookmarkObj\n","function updateLocalStorage(item, keyString) {\n    window.localStorage.setItem(keyString, JSON.stringify(item))\n}\n//TODO: add actual database instead of just local storage\n\nexport default updateLocalStorage","import { NavLink } from 'react-router-dom'\nimport { Switch } from '@mui/material'\nimport tw from 'twin.macro'\nimport styled from \"styled-components\";\n\n\nconst AutosubmitWrap = styled.div`\n    ${tw`flex items-center ml-auto`}\n    `\n\nconst HeaderWrap = styled.header`\n    ${tw`flex items-center`}\n    `\n\nconst NavList = styled.ul`\n    ${tw`flex items-center`}\n    `\n\nconst Header = ({ autoSubmit, setAutoSubmit }) => {\n\n    function handleToggle() {\n        setAutoSubmit(!autoSubmit)\n    }\n\n    const navItems = [\n        {\n            title: \"Buffer\",\n            link: \"/buffer\"\n        },\n        {\n            title: \"Library\",\n            link: \"/library\"\n        }\n    ]\n\n    return (\n        <HeaderWrap>\n            <nav>\n                <NavList>\n                    {navItems.map((item, index) =>\n                        <li key={index}>\n                            <NavLink className={isActive => \"p-4\" +\n                                (isActive.isActive ? \" bg-gray-300\" : \"\")\n                            } to={item.link}>{item.title}\n                            </NavLink>\n                        </li>)}\n                </NavList>\n            </nav>\n            <AutosubmitWrap>\n                <span>autosubmit</span>\n                <Switch onChange={handleToggle} checked={autoSubmit} />\n            </AutosubmitWrap>\n\n            <nav>\n                <NavList>\n                    <li>\n                        <NavLink className={isActive => \"p-4\" +\n                            (isActive.isActive ? \" bg-gray-300\" : \"\")\n                        } to=\"/archive\">Archive</NavLink>\n                    </li>\n                </NavList>\n            </nav>\n        </HeaderWrap>\n    )\n}\n\nexport default Header\n","import ContentSection from \"./components/ContentSection\"\nimport { useState } from \"react\"\nimport BookmarkObj from \"./helpers/BookmarkObj\"\nimport updateLocalStorage from \"./helpers/updateLocalStorage\"\nimport { v4 } from \"uuid\"\nimport Header from \"./components/Header/Header\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nconst App = () => {\n\n    const [autoSubmit, setAutoSubmit] = useState(false)\n\n    const startingBookmarks = [{\n        title: \"Example Bookmark\",\n        description: \"most of these are automatically generated\",\n        url: \"#\",\n        id: v4(),\n        isSubmited: true,\n    }]\n\n    const [bookmarks, setBookmarks] = useState(JSON.parse(window.localStorage.getItem('bookmarks'))\n        ?.map(bookmark => new BookmarkObj(bookmark.title, bookmark.description, bookmark.url, bookmark.itemType)) ?? startingBookmarks)\n\n    const addBookmark = (title, description, url, type, rating, keywords) => {\n        const newBookmark = new BookmarkObj(title, description, url, type, rating, keywords)\n        setBookmarks([newBookmark, ...bookmarks])\n        updateLocalStorage(bookmarks, 'bookmarks')\n    }\n\n    function deleteBookmark(bookmarkId) {\n        const i = bookmarks.map(bookmark => bookmark.id === bookmarkId).indexOf(true)\n        const newBookmarks = bookmarks.map(bookmark => bookmark)\n        newBookmarks.splice(i, 1)\n        setBookmarks(newBookmarks)\n        updateLocalStorage(newBookmarks, 'bookmarks')\n    }\n\n    return (\n        <BrowserRouter>\n            <Header autoSubmit={autoSubmit} setAutoSubmit={setAutoSubmit} />\n            <ContentSection\n                bookmarks={bookmarks}\n                setBookmarks={setBookmarks}\n                addBookmark={addBookmark}\n                deleteBookmark={deleteBookmark}\n            />\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}